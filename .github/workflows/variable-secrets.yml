name: Exploring Variables and Secrets

on:
   push:
   workflow_dispatch: 
#    schedule:
#     - cron: "*/1 * * * *"
  

env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: github-actions-nginx
    


#jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: docker build -t docker.io/nikosstation/imageName:latest

#         - name: Docker login
#           run: Docker login --username=nikosstation --password=

#         - name: Docker publish
#           run: docker push docker.io/nikosstation/imageName:latest

#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Run
#           run: docker run -d -p 8080:80 docker.io/nikosstation/imageName:latest

###########################################################################################3

# jobs:

#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker-build
#           env:
#             CONTAINER_REGISTRY: docker.io
#            $: nikosstation
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker build -t ${{ env.CONTAINER_REGISTRY  }}/$/$IMAGE_NAME:latest

#         - name: docker login
#           env:
#             DOCKER_PASSWORD: alofjolfof
#            $: nikosstation
#           run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=DOCKER_PASSWORD

#         - name: Docker publish
#           env:
#             CONTAINER_REGISTRY: docker.io
#            $: nikosstation
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker push $CONTAINER_REGISTRY/$/$IMAGE_NAME:latest

#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Run
#           env:
#             CONTAINER_REGISTRY: docker.io
#            $: nikosstation
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$/$IMAGE_NAME:latest

##########################################################################################################

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker-build
          run: echo docker build -t ${{ env.CONTAINER_REGISTRY  }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

        - name: docker login
          run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}

        - name: Docker publish
          run: echo docker push $CONTAINER_REGISTRY/$/$IMAGE_NAME:latest

    deploy:
        if: github.ref == 'refs/heads/main'
        needs: docker
        concurrency:
            group: production-deployment
            cancel-in-progress: false
        runs-on: ubuntu-latest
        steps:
        - name: Docker Run
          timeout-minutes: 1
          run: |
             echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
             sleep 600s 

